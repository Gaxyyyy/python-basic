Question 1: Given an input in the form of a positive integer n,
write a function taking the positive integer as the only parameter,
and printing out a triangle-shaped pattern made of the star character (*). 
Here n specifies the number of rows in the pattern.
The number of stars in each row increases by 2 each time.
For example:
If n = 3, the output of the function is
  *
 ***
*****
If n = 4, the output:
   *
  ***
 *****
*******

Code prototype: StarTriangle.py

Hint: to print something without newline, use end='' parameter for python function print, for example, print('hello', end='')

Question 2：Given limit as a positive integer, write a function that return the sum of multiples of 3 and 5 between 0 and limit. Obviously,
the function takes limit as the only parameter.
As an example, if limit=20, then it should return the sum of 3, 5, 6, 9, 10, 12, 15, 18, 20.
Code prototype: SumOfMultiplesOf3And5.py

Question 3: Given n as a positive integer, write a founction that cycle through every number from 1 to n, and put the number into a list, if the number is divisible by 4, then instead of putting the number itself into list, it puts “Fizz” into it. If the number is divisible by 6, then instead of putting the number itself onto the list, it puts “Buzz” onto it. If the number is divisible by both 4 and 6, then it puts “FizzBuzz” onto it. If the number doesn’t satisfy any of these conditions, simply puts the number itself onto the list. The list will be the only return from the function.

For example: if n = 13, then the list returned from the function looks like: [1, 2, 3, Fizz, 5, Buzz, 7, Fizz, 9, 10, 11, FizzBuzz, 13]
Code prototype: FizzBuzz.py

Question 4: Write a function which return the sum of all digits in a positive integer n, this positive integer n is the only parameter of the function. For example, for n = 123, then the function will return 1+2+3=6
Code prototype: SumOfDigits.py

Question 5: Write a function wich takes a string as parameter, and sum all numbers in the string and then return the sum. The numbers in the string is separated by space(' ').
Hint: one can use split function provided by the str class to split all sub-stirngs separated by ' '. and then use isnumeric which is also a str provided method to check if a sub-string is a number or not.
Code prototype: SumOfNumbersInString.py

Question 6: Write a function which takes 3 numbers as input, and return the maximum of the three numbers.
Hint: one can use python function max to get the bigger one from two numbers.
Code prototype: MaxOfThree.py

Question 7: Write a function in Python that accepts a positive integer and returns the equivalent binary number. The returned binary number should be stored in a string. To make this simple, the decimal number will always be less than 1,024, so the binary number returned will always be less than ten digits long.
Here is an example: if the function input is 32 it will return "100000"
Hint: The bits of a positive number can be obtained by dividing it by 2 and collecting remainders. 
Code prototype: DecToBin.py

Question 8: Create a function in Python that accepts two parameters. The first will be a list of numbers. The second parameter will be a string that can be one of the following values: "asc", "desc", and "none".

If the second parameter is "asc", then the function should return a list with the numbers in ascending order. If it's "desc", then the list should be in descending order, and if it's "none" it should return the original list unaltered.
Code prototype: SortList.py






